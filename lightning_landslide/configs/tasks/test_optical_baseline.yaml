# =============================================================================
# configs/tasks/test_optical_baseline.yaml - 测试任务配置
# =============================================================================

# 这个配置文件专门用于测试已训练的模型
# 它基于训练配置，但针对测试任务进行了优化

# === 实验信息 ===
experiment_name: "optical_baseline_test"
description: "Testing optical baseline model performance on test set"
version: "1.0.0"
tags: ["test", "optical", "baseline", "evaluation"]

# 全局设置
seed: 3407
log_level: "INFO"

# === 必需：检查点路径 ===
# 这是测试任务最重要的配置项
checkpoint_path: "outputs/checkpoints/optical_baseline/best.ckpt"

# === 模型配置 ===
# 测试时的模型配置应该与训练时完全一致
model:
  target: lightning_landslide.src.models.LandslideClassificationModule
  params:
    base_model:
      target: lightning_landslide.src.models.optical_swin.OpticalSwinModel
      params:
        model_name: "swin_tiny_patch4_window7_224"
        input_channels: 5
        num_classes: 1
        dropout_rate: 0.2
        pretrained: true
        freeze_backbone: false
    
    loss_config:
      type: "focal"
      focal_params:
        alpha: 1.0
        gamma: 2.0
    
    optimizer_config:
      type: "adamw"
      adamw_params:
        lr: 1e-4  # 测试时不使用，但保持配置一致性
        weight_decay: 1e-4
    
    scheduler_config:
      type: "cosine_with_warmup"
      cosine_params:
        warmup_epochs: 5
        min_lr_ratio: 0.01
    
    metrics_config:
      primary_metric: "f1"
      metrics: ["accuracy", "precision", "recall", "f1", "auroc", "average_precision"]
      threshold: 0.5

# === 数据配置 ===
# 测试时使用测试数据集
data:
  target: lightning_landslide.src.data.MultiModalDataModule
  params:
    # 数据路径 - 指向测试数据
    train_data_dir: "dataset/train_data"  # 仍需要用于数据模块初始化
    test_data_dir: "dataset/test_data"    # 主要使用的测试数据
    train_csv: "dataset/Train.csv"
    test_csv: "dataset/Test.csv"
    exclude_ids_file: "dataset/data_check/exclude_ids.json"
    
    # 通道配置
    channel_config:
      total_channels: 13
      channel_groups:
        optical: [0, 1, 2, 3]
        derived: ["ndvi"]
      usage_modes:
        optical_only:
          groups: ["optical", "derived"]
    active_mode: "optical_only"
    
    # 数据加载配置 - 测试时的优化设置
    batch_size: 128        # 测试时可以使用更大的batch size
    num_workers: 8
    pin_memory: true
    
    # 测试时不需要数据分割
    val_split: 0.0         # 测试时不分割验证集
    stratify: false        # 测试时不需要分层采样
    
    # 测试时不使用数据增强
    augmentation:
      train: {}            # 空配置，不应用任何增强
      val: {}
      test: {}

# === 训练器配置 ===
# 测试专用的trainer配置
trainer:
  target: pytorch_lightning.Trainer
  params:
    # 基础配置
    accelerator: "auto"
    devices: "auto"
    precision: "16-mixed"
    
    # 测试特定配置
    logger: false              # 测试时不需要日志记录
    enable_checkpointing: false # 测试时不保存检查点
    enable_progress_bar: true   # 显示测试进度
    enable_model_summary: false # 不显示模型摘要
    
    # 限制配置（可用于快速测试）
    limit_test_batches: 1.0     # 使用全部测试数据
    # limit_test_batches: 0.1   # 快速测试：只使用10%的数据

# === 输出配置 ===
outputs:
  checkpoint_dir: "outputs/checkpoints/test_results"
  log_dir: "outputs/logs/test_results"
  predictions_dir: "outputs/test_results"
  figures_dir: "outputs/figures/test_results"

# === 测试特定配置 ===
test_config:
  # 结果保存配置
  save_detailed_results: true    # 保存详细的测试结果
  save_confusion_matrix: true    # 保存混淆矩阵
  save_roc_curve: true          # 保存ROC曲线
  save_pr_curve: true           # 保存PR曲线
  
  # 可视化配置
  generate_plots: true          # 生成可视化图表
  plot_predictions: true        # 可视化预测结果
  plot_errors: true            # 可视化错误样本
  
  # 分析配置
  error_analysis: true         # 进行错误分析
  confidence_analysis: true    # 进行置信度分析
  
  # TTA（测试时增强）配置
  tta:
    enable: true              # 启用TTA提高性能
    n_augmentations: 4        # TTA增强次数
    aggregation: "mean"       # 聚合方法

# === 性能分析配置 ===
analysis:
  # 指标计算
  calculate_per_class_metrics: true
  calculate_confusion_matrix: true
  calculate_classification_report: true
  
  # 阈值优化
  optimize_threshold: true      # 基于验证集优化分类阈值
  threshold_range: [0.1, 0.9]  # 阈值搜索范围
  threshold_step: 0.05         # 阈值搜索步长
  
  # 结果比较
  compare_with_baseline: false  # 是否与基线模型比较
  baseline_results_path: null  # 基线结果文件路径

# === 报告生成配置 ===
reporting:
  # 报告格式
  generate_html_report: true   # 生成HTML格式的测试报告
  generate_pdf_report: false   # 生成PDF格式的报告
  
  # 报告内容
  include_model_info: true     # 包含模型信息
  include_data_info: true      # 包含数据集信息
  include_training_history: false  # 不包含训练历史（测试任务）
  include_error_analysis: true # 包含错误分析
  
  # 图表配置
  figure_format: "png"         # 图表保存格式
  figure_dpi: 300             # 图表分辨率
  figure_size: [10, 8]        # 图表尺寸

# === 计算资源配置 ===
compute:
  gpu_ids: [0]
  mixed_precision: true
  benchmark_mode: true         # 启用基准模式提高推理速度